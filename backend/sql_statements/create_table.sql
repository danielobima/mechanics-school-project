CREATE TABLE workshops (
    workshop_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    workshop_name VARCHAR2(255) NOT NULL,
    location VARCHAR2(255) NOT NULL
);

CREATE TABLE mechanics (
    mechanic_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    mechanic_name VARCHAR2(255) NOT NULL,
    workshop_id NUMBER NOT NULL,
    CONSTRAINT fk_mechanics_workshops FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)
);

CREATE TABLE customers (
    customer_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    customer_name VARCHAR2(255) NOT NULL,
    customer_phone VARCHAR2(20)
);

CREATE TABLE spare_parts (
    part_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    part_name VARCHAR2(255) NOT NULL,
    quantity_in_stock NUMBER NOT NULL,
    cost_per_unit NUMBER(10,2) NOT NULL
);

CREATE TABLE vehicles (
    vehicle_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    make VARCHAR2(255) NOT NULL,
    model VARCHAR2(255) NOT NULL,
    year NUMBER NOT NULL,
    customer_id NUMBER NOT NULL,
    CONSTRAINT fk_vehicles_customers FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE jobs (
    job_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
    vehicle_id NUMBER NOT NULL,
    mechanic_id NUMBER NOT NULL,
    workshop_id NUMBER NOT NULL,
    start_time TIMESTAMP NOT NULL,
    end_time TIMESTAMP,
    job_status VARCHAR2(20) NOT NULL CHECK (job_status IN ('in-progress', 'completed')),
    job_description VARCHAR2(255),
    is_paid NUMBER(1,0)  DEFAULT 0 NOT NULL,
    CONSTRAINT fk_jobs_vehicles FOREIGN KEY (vehicle_id) REFERENCES vehicles(vehicle_id),
    CONSTRAINT fk_jobs_mechanics FOREIGN KEY (mechanic_id) REFERENCES mechanics(mechanic_id),
    CONSTRAINT fk_jobs_workshops FOREIGN KEY (workshop_id) REFERENCES workshops(workshop_id)
);

CREATE TABLE job_parts (
    job_id NUMBER(10) NOT NULL,
    part_id NUMBER(10) NOT NULL,
    quantity_used NUMBER(10) NOT NULL,
    cost NUMBER(10,2) NOT NULL,
    CONSTRAINT fk_job_id FOREIGN KEY (job_id) REFERENCES jobs(job_id),
    CONSTRAINT fk_part_id FOREIGN KEY (part_id) REFERENCES spare_parts(part_id)
);
